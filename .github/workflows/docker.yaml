name: Docker Images
on:
    pull_request:
    push:
        branches: ["main"]
env:
    REGISTRY: ghcr.io
    IMAGE_NAME_APP: ${{ github.repository }}_app
    IMAGE_NAME_VIDEO_GENERATOR: ${{ github.repository }}_video_generator
    IMAGE_NAME_VOICE_GENERATOR: ${{ github.repository }}_voice_generator
jobs:
    AppImage:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.6.1
            - name: Log in to the Container registry
              uses: docker/login-action@v3.3.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.TOKEN_KEY_GITHUB }}
            - name: Extract metadata (tags, labels) for Docker for App
              id: meta
              uses: docker/metadata-action@v5.5.1
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP }}
                  tags: |
                      type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=raw,value=dev-{{date 'YYYYMMDD'}},enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            - name: Build and push App Docker image
              id: push
              uses: docker/build-push-action@v6.7.0
              with:
                  context: ./App
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  github-token: ${{ secrets.TOKEN_KEY_GITHUB }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
            - name: Generate artifact attestation for App
              uses: actions/attest-build-provenance@v1.4.3
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
    VideoGeneratorImage:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.6.1
            - name: Log in to the Container registry
              uses: docker/login-action@v3.3.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.TOKEN_KEY_GITHUB }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.5.1
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_VIDEO_GENERATOR }}
                  tags: |
                      type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=raw,value=dev-{{date 'YYYYMMDD'}},enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            - name: Build and push Video Generator Docker image
              id: push
              uses: docker/build-push-action@v6.7.0
              with:
                  context: ./VideoGenerator
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  github-token: ${{ secrets.TOKEN_KEY_GITHUB }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
            - name: Generate artifact attestation for Video Generator
              uses: actions/attest-build-provenance@v1.4.3
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_VIDEO_GENERATOR }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
    VoiceGeneratorImage:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.6.1
            - name: Log in to the Container registry
              uses: docker/login-action@v3.3.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.TOKEN_KEY_GITHUB }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.5.1
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_VOICE_GENERATOR }}
                  tags: |
                      type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                      type=raw,value=dev-{{date 'YYYYMMDD'}},enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            - name: Build and push Voice Generator Docker image
              id: push
              uses: docker/build-push-action@v6.7.0
              with:
                  context: ./VoiceGenerator
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  github-token: ${{ secrets.TOKEN_KEY_GITHUB }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
            - name: Generate artifact attestation for Voice Generator
              uses: actions/attest-build-provenance@v1.4.3
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_VOICE_GENERATOR }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
